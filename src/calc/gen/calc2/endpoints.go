// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc2 endpoints
//
// Command:
// $ goa gen calc/design

package calc2

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "calc2" service endpoints.
type Endpoints struct {
	Minus goa.Endpoint
}

// NewEndpoints wraps the methods of the "calc2" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Minus: NewMinusEndpoint(s),
	}
}

// Use applies the given middleware to all the "calc2" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Minus = m(e.Minus)
}

// NewMinusEndpoint returns an endpoint function that calls the method "minus"
// of service "calc2".
func NewMinusEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*MinusPayload)
		return s.Minus(ctx, p)
	}
}
