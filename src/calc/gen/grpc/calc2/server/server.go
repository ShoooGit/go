// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc2 gRPC server
//
// Command:
// $ goa gen calc/design

package server

import (
	calc2 "calc/gen/calc2"
	calc2pb "calc/gen/grpc/calc2/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the calc2pb.Calc2Server interface.
type Server struct {
	MinusH goagrpc.UnaryHandler
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the calc2 service endpoints.
func New(e *calc2.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		MinusH: NewMinusHandler(e.Minus, uh),
	}
}

// NewMinusHandler creates a gRPC handler which serves the "calc2" service
// "minus" endpoint.
func NewMinusHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeMinusRequest, EncodeMinusResponse)
	}
	return h
}

// Minus implements the "Minus" method in calc2pb.Calc2Server interface.
func (s *Server) Minus(ctx context.Context, message *calc2pb.MinusRequest) (*calc2pb.MinusResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "minus")
	ctx = context.WithValue(ctx, goa.ServiceKey, "calc2")
	resp, err := s.MinusH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*calc2pb.MinusResponse), nil
}
