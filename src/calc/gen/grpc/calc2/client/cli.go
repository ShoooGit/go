// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc2 gRPC client CLI support package
//
// Command:
// $ goa gen calc/design

package client

import (
	calc2 "calc/gen/calc2"
	calc2pb "calc/gen/grpc/calc2/pb"
	"encoding/json"
	"fmt"
)

// BuildMinusPayload builds the payload for the calc2 minus endpoint from CLI
// flags.
func BuildMinusPayload(calc2MinusMessage string) (*calc2.MinusPayload, error) {
	var err error
	var message calc2pb.MinusRequest
	{
		if calc2MinusMessage != "" {
			err = json.Unmarshal([]byte(calc2MinusMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"a\": 686605435966370186,\n      \"b\": 8228676432890045784\n   }'")
			}
		}
	}
	v := &calc2.MinusPayload{
		A: int(message.A),
		B: int(message.B),
	}

	return v, nil
}
