// Code generated by goa v3.2.6, DO NOT EDIT.
//
// calc gRPC server types
//
// Command:
// $ goa gen calc/design

package server

import (
	calc "calc/gen/calc"
	calcpb "calc/gen/grpc/calc/pb"
)

// NewAddPayload builds the payload of the "add" endpoint of the "calc" service
// from the gRPC request type.
func NewAddPayload(message *calcpb.AddRequest) *calc.AddPayload {
	v := &calc.AddPayload{
		A: int(message.A),
		B: int(message.B),
	}
	return v
}

// NewAddResponse builds the gRPC response type from the result of the "add"
// endpoint of the "calc" service.
func NewAddResponse(result int) *calcpb.AddResponse {
	message := &calcpb.AddResponse{}
	message.Field = int32(result)
	return message
}

// NewMinusPayload builds the payload of the "minus" endpoint of the "calc"
// service from the gRPC request type.
func NewMinusPayload(message *calcpb.MinusRequest) *calc.MinusPayload {
	v := &calc.MinusPayload{
		A: int(message.A),
		B: int(message.B),
	}
	return v
}

// NewMinusResponse builds the gRPC response type from the result of the
// "minus" endpoint of the "calc" service.
func NewMinusResponse(result int) *calcpb.MinusResponse {
	message := &calcpb.MinusResponse{}
	message.Field = int32(result)
	return message
}
