// Code generated by goa v3.2.6, DO NOT EDIT.
//
// Users client
//
// Command:
// $ goa gen sample1/design

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Users" service client.
type Client struct {
	ListUserEndpoint   goa.Endpoint
	GetUserEndpoint    goa.Endpoint
	CreateUserEndpoint goa.Endpoint
	UpdateUserEndpoint goa.Endpoint
	DeleteUserEndpoint goa.Endpoint
}

// NewClient initializes a "Users" service client given the endpoints.
func NewClient(listUser, getUser, createUser, updateUser, deleteUser goa.Endpoint) *Client {
	return &Client{
		ListUserEndpoint:   listUser,
		GetUserEndpoint:    getUser,
		CreateUserEndpoint: createUser,
		UpdateUserEndpoint: updateUser,
		DeleteUserEndpoint: deleteUser,
	}
}

// ListUser calls the "list user" endpoint of the "Users" service.
func (c *Client) ListUser(ctx context.Context) (res Goa3SampleUserCollection, err error) {
	var ires interface{}
	ires, err = c.ListUserEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(Goa3SampleUserCollection), nil
}

// GetUser calls the "get user" endpoint of the "Users" service.
func (c *Client) GetUser(ctx context.Context, p *GetUserPayload) (res *Goa3SampleUser, err error) {
	var ires interface{}
	ires, err = c.GetUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Goa3SampleUser), nil
}

// CreateUser calls the "create user" endpoint of the "Users" service.
func (c *Client) CreateUser(ctx context.Context, p *CreateUserPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.CreateUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// UpdateUser calls the "update user" endpoint of the "Users" service.
func (c *Client) UpdateUser(ctx context.Context, p *UpdateUserPayload) (res *Goa3SampleUser, err error) {
	var ires interface{}
	ires, err = c.UpdateUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Goa3SampleUser), nil
}

// DeleteUser calls the "delete user" endpoint of the "Users" service.
func (c *Client) DeleteUser(ctx context.Context, p *DeleteUserPayload) (err error) {
	_, err = c.DeleteUserEndpoint(ctx, p)
	return
}
