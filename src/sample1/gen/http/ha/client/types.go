// Code generated by goa v3.2.6, DO NOT EDIT.
//
// Ha HTTP client types
//
// Command:
// $ goa gen sample1/design

package client

import (
	haviews "sample1/gen/ha/views"

	goa "goa.design/goa/v3/pkg"
)

// DrawCardResponseBody is the type of the "Ha" service "draw card" endpoint
// HTTP response body.
type DrawCardResponseBody []*Goa3SampleUserResponse

// Goa3SampleUserResponse is used to define fields on response body types.
type Goa3SampleUserResponse struct {
	// theme of game
	Theme *string `form:"theme,omitempty" json:"theme,omitempty" xml:"theme,omitempty"`
	// card of abc
	Card *string `form:"card,omitempty" json:"card,omitempty" xml:"card,omitempty"`
}

// NewDrawCardGoa3SampleUserCollectionOK builds a "Ha" service "draw card"
// endpoint result from a HTTP "OK" response.
func NewDrawCardGoa3SampleUserCollectionOK(body DrawCardResponseBody) haviews.Goa3SampleUserCollectionView {
	v := make([]*haviews.Goa3SampleUserView, len(body))
	for i, val := range body {
		v[i] = unmarshalGoa3SampleUserResponseToHaviewsGoa3SampleUserView(val)
	}
	return v
}

// ValidateGoa3SampleUserResponse runs the validations defined on
// Goa3-SampleUserResponse
func ValidateGoa3SampleUserResponse(body *Goa3SampleUserResponse) (err error) {
	if body.Theme == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("theme", "body"))
	}
	if body.Card == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("card", "body"))
	}
	return
}
